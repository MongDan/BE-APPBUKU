generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  TERSEDIA
  DIPINJAM
  PENDING
  DITOLAK
  PENDING_KEMBALI
  SELESAI
}

model User {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique
  password   String
  role       Role         @default(USER)
  peminjaman Peminjaman[] // Relasi
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Buku {
  id            Int             @id @default(autoincrement())
  judul         String
  pengarang     String
  penerbit      String
  eksemplarBuku EksemplarBuku[] 
  tahunTerbit   Int
  jumlahBuku    Int
  kategori      BukuKategori[] 
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Kategori {
  id        Int            @id @default(autoincrement())
  nama      String
  buku      BukuKategori[] // Relasi many-to-many melalui BukuKategori
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model EksemplarBuku {
  id            Int          @id @default(autoincrement())
  kodeEksemplar String       @unique
  bukuId        Int
  status        Status       @default(TERSEDIA)
  buku          Buku         @relation(fields: [bukuId], references: [id])
  peminjaman    Peminjaman[] // new: optional, for reverse relation
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Peminjaman {
  id             Int           @id @default(autoincrement())
  userId         Int
  eksemplarId    Int
  tanggalPinjam  DateTime      @default(now())
  tanggalKembali DateTime
  status         Status        @default(PENDING)
  user           User          @relation(fields: [userId], references: [id])
  eksemplar      EksemplarBuku @relation(fields: [eksemplarId], references: [id])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model BukuKategori {
  id         Int      @id @default(autoincrement())
  idBuku     Int
  kategoriId Int
  buku       Buku     @relation(fields: [idBuku], references: [id])
  kategori   Kategori @relation(fields: [kategoriId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
